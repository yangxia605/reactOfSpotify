/** * Created by mianmian on 2018/3/15. */const CLIENT_ID = 'b1c5f647ad044b9c9aadf340da3b7e0d';const REDIRECT_URI= 'http%3a%2f%2flocalhost%3a3000%2f';//http://localhost:3000/let accessToken=  '';const Spotify = {  //Get a Spotify user's access token  getAccessToken:() =>{    if(accessToken){      return accessToken;    }else{      //check if it has just been obtained.      const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);      const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);      //if login,return the accessToken      if(accessTokenMatch ){//token has just been obtained.        //Set the access token value        accessToken=accessTokenMatch;        // expire time        window.setTimeout(() => accessToken = '', expiresInMatch * 1000);        window.history.pushState({accessToken: ''}, null, '/');      }else{        //make request        window.location.href= `https://accounts.spotify.com/authorize?client_id=${CLIENT_ID}&response_type=token&scope=playlist-modify-public&redirect_uri=${REDIRECT_URI}`;      }    }  },  //Send a search request to the Spotify API  search: (term) =>{    Spotify.getAccessToken();    if(accessToken.length > 0 && accessToken[0] !== ''){      accessToken = accessToken[0].split('=')[1];    }    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`,{     headers: {       Authorization: `Bearer ${accessToken[0].split('=')[1]}`     }   }).then(response => {      return response.json();   }).then(jsonResponse => {     if(jsonResponse.tracks){       console.log(jsonResponse.tracks.items)       return jsonResponse.tracks.items.map((track) => ({       id: track.id,       name:track.name,       artist:track.artists[0].name,       album:track.album.name,       uri:track.uri     }));     }   })  },  //Save a user's playlist to their Spotify account.  savePlaylist: (playlistName, trackUris) =>{    Spotify.getAccessToken();    if(accessToken.length > 0 && accessToken[0] !== ''){      accessToken = accessToken[0].split('=')[1];    }    const header = {      'Authorization': `Bearer ${accessToken}`    };    if(playlistName ==='' || trackUris.length === 0){      return false;    }  }};export default Spotify;